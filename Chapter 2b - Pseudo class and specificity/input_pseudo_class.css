/* https://developer.mozilla.org/en-US/docs/Web/CSS/Pseudo-classes 
   Input pseudo-classes (These pseudo-classes relate to form elements, and enable selecting elements 
    based on HTML attributes and the state that the field is in before and after interaction.)
        :checked
        :disabled 
        :required (not using it yet)

*/
/*---------------------------------- Input pseudo-classes -----------------------------------*/
.input-2 {
  width: var(--space-4);
  height: var(--space-4);
  border: var(--border-width-1) solid var(--color-1); /* blue */
}

.input-2[type="radio"] {
  border-radius: var(--border-radius-2);
}

.input-2:checked {
  background-color: var(--color-1); /* blue */
  display: flex;
  align-items: center;
  justify-content: center;
}

.input-2:checked::after {
  content: "✔";
  font-size: var(--font-size-3);
  color: var(--color-9); /* white */
}

.input-2:disabled {
  background-color: var(--color-7); /* gray */
  border: var(--border-width-1) solid var(--color-8); /* black */
}

/* Quiz: How would you style the input text - default and disabled state? */

/* Quiz: What happens here? */
/* .input-2::before,
.input-3::before {
  content: "✔";
  color: var(--color-3);
} */

/* Explain :required */
/* Quiz: Which one works? label::after:has(+ input:required) OR label:has(+ input:required)::after */
/* label::after:has(+ input:required),
label:has(+ input:required)::after {
  content: "*";
  color: var(--color-3);
} */

/* Explain how browser tends to treat different inputs differently. Input text treated as keyboard focused elements by default 
even a click is considered a keyboard like behaviour hence focus-visible is applied. But input radio/checkbox are mouse based
interaction, which cannot be treated as keyboard interaction. Focus superset of focus-visible. Former overrides the latter if
defined later. usually define focus first and then focus visible */
input:focus {
  background-color: var(--color-3); /* red */
}
input:focus-visible {
  background-color: var(--color-4); /* green */
}
input:focus:checked {
  background-color: var(--color-3); /* red */
}
input:focus-visible:checked {
  background-color: var(--color-4); /* green */
}
