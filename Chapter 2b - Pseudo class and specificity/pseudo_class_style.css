:root {
  /* Colors */
  --color-1: blue;
  --color-2: yellow;
  --color-3: red;
  --color-4: green;
  --color-5: purple;
  --color-6: orange;
  --color-7: gray;
  --color-8: black;

  /* Font family */
  --font-family-group-1: Cambria, Cochin, Georgia, Times, "Times New Roman",
    serif;

  /* Font size */
  --font-size-1: 2em;
  --font-size-2: 3em;
  --font-size-4: 4em;

  /* Font weight */
  --font-weight-bold: bold;

  /* Border width */
  --border-width-1: 0.125rem;

  /* Border radius */
  --border-radius-1: 1rem;

  /* Spacing */
  --space-1: 1rem;
}

/* https://developer.mozilla.org/en-US/docs/Web/CSS/Pseudo-classes 
   1. (RRC todo) User action pseudo-classes (These pseudo-classes require some interaction by the user 
   in order for them to apply, such as holding a mouse pointer over an element.)
        :hover
        :active
        :focus
        :focus-within
        :focus-visible

   2. (RRC todo) Functional pseudo-classes
        :not()
        :has()

   3. (RRC todo) Tree-structural pseudo-classes (These pseudo-classes relate to the location of an 
   element within the document tree.)
        :root 
        :empty
        :nth-child()
        :first-child
        :last-child
        :last-of-type
        :nth-of-type()

    4. (RRC todo) Input pseudo-classes (These pseudo-classes relate to form elements, and enable selecting elements 
    based on HTML attributes and the state that the field is in before and after interaction.)
        :checked
        :disabled
  
    ::-webkit-scrollbar:vertical
  */

.hidden {
  display: none;
}

/*-------------------------------- User action pseudo-classes -------------------------------*/
/* Specificity pseudo class = 10 */
/* Cannot be selected via JS. Not part of DOM */
/* :hover works on almost all elements except for non-rendered elements/invisible elements */
.btn:hover,
.input:hover {
  background-color: var(--color-6); /* orange */
}
/* Quiz: What do you think will happen if I do *:hover? */

/* :active is when the element is being clicked */
.btn:active,
.input:active {
  background-color: var(--color-5); /* purple */
}
/* Quiz: What do you think will happen if I do *:active? */

/* .btn:focus-visible over :focus */
/* green */
/*.btn:focus,
.input:focus {
  background-color: var(--color-4);
}*/
/* red */
/* RRC focus-within takes priority over active. */
/*.btn:focus-within,
.input:focus-within {
  background-color: var(--color-3);
}*/
/* yellow */
/*.btn:focus-visible,
.input:focus-visible {
  background-color: var(--color-2);
}*/
/*RRC: difference betwee :focus, :focus-within, :focus-visible ? and use cases? */
div:link {
  color: var(--color-6); /* orange */
}

div:visited {
  color: var(--color-4); /* green */
}

a:hover {
  color: var(--color-1); /* blue */
}

a:active {
  color: var(--color-7); /* gray */
}
/* Quiz: Do you think pseudo classes like :link, :visited will work on <div>? what about <button>?*/
/*-------------------------------------------------------------------------------------------*/

/*-------------------------------- Functional pseudo-classes --------------------------------*/
/*-------------------------------------------------------------------------------------------*/

/*------------------------------ Tree structural pseudo-classes -----------------------------*/
ul li:first-child {
  font-weight: var(--font-weight-bold);
}
ul li:last-child {
  font-style: italic;
}
/*-------------------------------------------------------------------------------------------*/

/*---------------------------------- Input pseudo-classes -----------------------------------*/
/*-------------------------------------------------------------------------------------------*/
