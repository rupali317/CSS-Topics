:root {
  /* 1 . Colors */
  --color-1: rgb(54, 134, 171);
  --color-2: rgb(38, 82, 103);
  --color-3: white;
  --color-4: rgb(52, 141, 89);
  --color-5: rgb(38, 103, 65);
  --color-6: rgb(210, 208, 45);
  --color-7: rgb(129, 85, 185);
  --color-8: rgb(153, 153, 151);

  /* 2. Space */
  --space-1: 0rem;
  --space-2: 1rem;
  --space-3: 7rem;
  --space-4: 9rem;

  /* 3. Border radius */
  --border-radius-1: 0.125rem;

  /* 4. Font weights */
  --font-bold: 700;
}

button {
  padding: var(--space-2);
  border-radius: var(--border-radius-1);
  border-width: var(--space-1);
}

button:hover {
  cursor: pointer;
}

/* property duration transition-timing-function delay; */
.button-1 {
  background-color: var(--color-1);
  color: var(--color-3);
  transition: background-color 1s linear 0.5s; /* shorthand representation */
  /* transition-property: background-color;
  transition-duration: 1s;
  transition-timing-function: linear;
  transition-delay: 0.5s */
}

.button-1:hover {
  background-color: var(--color-2);
}

/* visible and hidden - not all fall under the definition of smooth change */
/* Common Timing Functions: ease, linear, ease-in, ease-out, cubic-bezier(...) */
.button-2 {
  background-color: var(--color-4);
  color: var(--color-3);
  width: var(--space-3);
  /* visibility: visible; */
  transition: background-color 2s ease-in, color 2s ease-out, width 1s 1s,
    transform 1s, opacity 1s 1s;
  /* transition: background-color 2s ease-in, color 2s ease-out, width 1s 1s,
    visibility 2s ease; */
}

.button-2:hover {
  background-color: var(--color-5);
  color: var(--color-6);
  transform: scale(1.5);
  /* visibility: hidden; */
  width: var(--space-4);
  opacity: 0.5;
}

.button-3 {
  background-color: var(--color-7);
  color: var(--color-3);
}

.disabled {
  color: var(--color-3);
  background-color: var(--color-8);
}
/* Limitations: Transitions require a trigger (e.g., hover/focus/class change), No keyframe control */

.animation-1 {
  animation: jerk-horizontal 1s ease-in infinite; /* shorthand representation */
  /* animation-name: jerk-horizontal;
  animation-iteration-count: infinite;
  animation-timing-function: ease-in;
  animation-duration: 1s; */
}

@keyframes jerk-horizontal {
  from {
    transform: translateX(20px);
  }

  to {
    transform: translateX(0px);
  }
}

.animation-2 {
  animation: jerk-vertical 5s ease-in infinite;
}

@keyframes jerk-vertical {
  0% {
    color: var(--color-2);
  }

  50% {
    color: var(--color-7);
  }

  75% {
    color: var(--color-4);
  }

  100% {
    color: var(--color-8);
  }
}

/*
CSS Animations: 

What Are Animations

Keyframe-based sequence of styles

Animation Properties

animation-delay

animation-direction

animation-fill-mode

animation-play-state

Hands-on Examples

Fade-in animation

Slide/scale bounce effect

Looping infinite loader animation
*/

/*
Advanced Tips
Combining Transitions + Transforms

Rotate, scale, move, skew

Use transform for better performance than animating top, left, etc.

Animation Performance Best Practices

Use will-change, transform, opacity for GPU acceleration

Use Cases

Microinteractions (buttons, toggles)

Page transitions

Loaders/spinners

Modal entrance/exit*/
