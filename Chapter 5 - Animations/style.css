:root {
  /* 1 . Colors */
  --color-1: rgb(54, 134, 171);
  --color-2: rgb(38, 82, 103);
  --color-3: white;
  --color-4: rgb(52, 141, 89);
  --color-5: rgb(38, 103, 65);
  --color-6: rgb(210, 208, 45);
  --color-7: rgb(129, 85, 185);
  --color-8: rgb(153, 153, 151);
  --color-9: rgb(188, 92, 92);

  /* 2. Space */
  --space-1: 0rem;
  --space-2: 1rem;
  --space-3: 7rem;
  --space-4: 9rem;
  --space-5: 0.5rem;

  /* 3. Border radius */
  --border-radius-1: 0.125rem;

  /* 4. Font weights */
  --font-bold: 700;
}

/*------------ Start: Helper functions ------------*/
body {
  display: flex;
  height: 100vh;
  margin: 0;
}

button {
  padding: var(--space-2);
  border-radius: var(--border-radius-1);
  border-width: var(--space-1);
}

button:hover {
  cursor: pointer;
}
/*------------- End: Helper functions -------------*/

/* property duration transition-timing-function delay; */
.button-1 {
  background-color: var(--color-1);
  color: var(--color-3);
  transition: background-color 1s linear 0.5s; /* shorthand representation */
  /* transition-property: background-color;
  transition-duration: 1s;
  transition-timing-function: linear;
  transition-delay: 0.5s; */
}

.button-1:hover {
  background-color: var(--color-2);
}

/* visible and hidden - not all fall under the definition of smooth change. opacity can be used as a potential alternative */
/* Common Timing Functions: ease, linear, ease-in, ease-out, cubic-bezier(...) */
/* Warnings against using all */
/* animating on width, height, top, left, are not great for performance */
.button-2 {
  background-color: var(--color-4);
  color: var(--color-3);
  width: var(--space-3);
  visibility: visible;
  transition: background-color 2s ease-in, color 2s ease-out, width 1s 1s,
    transform 1s, opacity 1s 1s;
  /* transition: visibility 5s; */
}

.button-2:hover {
  background-color: var(--color-5);
  color: var(--color-6);
  transform: scale(1.5);
  /* visibility: hidden; */
  width: var(--space-4);
  opacity: 0.5;
}

.button-3 {
  background-color: var(--color-7);
  color: var(--color-3);
  transition: background-color 1s linear, color 1s linear;
}

.disabled {
  color: var(--color-3);
  background-color: var(--color-8);
}

nav {
  color: var(--color-3);
  background-color: var(--color-2);
  padding: var(--space-2);
  transform: translate(-100%); /* Moves it left by 100% of its own width */
  transition: transform 2s linear;
}

nav.menu-open {
  transform: translate(0px);
}

nav ul {
  display: flex;
  flex-direction: column;
  gap: var(--space-5);
  list-style-type: none;
}
/* Limitations: Transitions require a trigger (e.g., hover/focus/class change), No keyframe control */

.animation-1 {
  animation: jerk-horizontal 1s ease-in infinite; /* shorthand representation */
  /* animation-name: jerk-horizontal;
  animation-iteration-count: infinite;
  animation-timing-function: ease-in;
  animation-duration: 1s; */
  /* animation-delay: 3s; */
  /* animation-direction: normal; */ /* normal (start → end ), reverse (end → start), alternate (start → end, then end → start, repeat), alternate-reverse (end → start, then start → end, repeat) */
}

@keyframes jerk-horizontal {
  from {
    transform: translateX(20px);
  }

  to {
    transform: translateX(0px);
  }
}

.animation-2 {
  animation: change-color 5s 2s ease-in 2;
  /* animation-fill-mode: forwards; */
  /* Explain the values: 
  - forwards (keep style at 100% frame after animation ends), 
  - backwards (keeps style at 0% frame even before animation starts), 
  - none (default), 
  - both (forwards+backwards) */
}

@keyframes change-color {
  0% {
    color: var(--color-2); /* green */
  }

  50% {
    color: var(--color-7); /* purple */
  }

  75% {
    color: var(--color-9); /* red */
  }

  100% {
    color: var(--color-8); /* gray */
  }
}

.animation-3 {
  width: var(--space-2);
  height: var(--space-2);
  background-color: var(--color-7);
  animation: pulsate 0.75s ease-in-out infinite alternate;
}

@keyframes pulsate {
  0% {
    transform: scale(1);
    opacity: 1;
  }
  100% {
    transform: scale(1.2);
    opacity: 0.5;
  }
}

.animation-3:hover {
  animation-play-state: paused; /* whether animation is playing or paused. One use case: modal opens up pause any animation so that focus is on the modal instead of being distracted */
}
