:root {
  /* Colors */
  --color-1: blue;
  --color-2: yellow;
  --color-3: red;
  --color-4: green;
  --color-5: purple;
  --color-6: orange;
  --color-7: gray;
  --color-8: black;

  /* Font family */
  --font-family-group-1: Cambria, Cochin, Georgia, Times, "Times New Roman",
    serif;

  /* Font size */
  --font-size-1: 2em;
  --font-size-2: 3em;
  --font-size-4: 4em;

  /* Font weight */
  --font-weight-bold: bold;

  /* Border width */
  --border-width-1: 2px;
}

/*----------------------------- Attribute Selectors -----------------------------*/
/* 1. Selects all input elements that have attribute name-value pair as type="text". Specificity 1 + 10 = 11 */
input[type="text"] {
  border: var(--border-width-1) solid var(--color-4);
}

/* 2. Selects all input elements that have both the attributes (attribute name and value):
    -> .placeholder="john_doe@gmail.com"
    -> .type="text" 
   Specificty = 1 + 10 + 10 = 21 
*/
input[placeholder="john_doe@gmail.com"][type="email"] {
  border: var(--border-width-1) solid var(--color-6);
}

/* Quiz: How is this interpreted? */
input[placeholder="john_doe@gmail.com"][placeholder="john_doe@gmail.com"] {
}

/* 3. Selects all a elements where the href attribute has substring "example" present in it. Specificity = 1 + 10 = 11 */
a[href*="example"] {
  color: var(--color-5);
}

/* Quiz: What happens here? */
a[href="example"] {
  color: var(--color-5);
}

/* 4. Selects all a elements where the href attribute value ends with ".org". Specificity = 1 + 10 = 11 */
a[href$=".org"] {
  color: var(--color-8);
}

/* 5. Selects all a elements where the href attribute value begins with "https". Specificity = 1 + 10 = 11 */
a[href^="https"] {
  color: var(--color-3);
}

/* Quiz: How is this interpreted? */
a[href$=".org"][href^="https"] {
}

/* Quiz: How is this interpreted? */
a[href$=".org"] [href^="https"] {
}
/*-------------------------------------------------------------------------------*/
/* RRC dangers of !important -> breaks specificity rules, natural cascade rules */
/* Why we aim for lower specificity. Explain the use case */
