:root {
  /* Colors */
  --color-1: blue;
  --color-2: yellow;
  --color-3: red;
  --color-4: green;
  --color-5: purple;
  --color-6: orange;
  --color-7: gray;
  --color-8: black;
  --color-9: white;

  /* Font family */
  --font-family-group-1: Cambria, Cochin, Georgia, Times, "Times New Roman",
    serif;

  /* Font size */
  --font-size-1: 2em;
  --font-size-2: 3em;
  --font-size-4: 4em;

  /* Font weight */
  --font-weight-bold: bold;

  /* Border width */
  --border-width-1: 2px;

  /* Border radius */
  --border-radius-1: 10px;
  --border-radius-2: 20px;

  /* Spacing */
  --space-1: 10px;
}

html,
body {
  background-color: var(--color-9);
}

/* https://developer.mozilla.org/en-US/docs/Web/CSS/Pseudo-elements 
   ::before
   ::after 
   ::marker
   ::placeholder (TODO)
   ::-webkit-scrollbar, ::-webkit-scrollbar-track, ::-webkit-scrollbar-thumb
   ::-webkit-input-placeholder (TODO)

   ::backdrop (TODO)
   ::first-letter
   ::first-line
*/
/*------------------------------- Pseudo-Elements -------------------------------*/
.first-letter::first-letter,
.without-first-letter > span {
  /* Pseudo elements have the same specificty of an element = 1 point */
  /* Pseudo elements are not standalone elements. */
  font-size: var(--font-size-1);
  color: var(--color-3);
}

.without-first-line > span,
.first-line::first-line {
  color: var(--color-7);
}

.intro::first-line {
  color: var(--color-5);
}

.without-after-before > span {
  color: var(--color-1);
}

.after-before::before {
  content: "“";
  color: var(--color-1);
}

.after-before::after {
  content: "”";
  color: var(--color-1);
}

/* Quiz: and what do you think will happen? */
/* .after-before::before {
  content: "“";
  color: var(--color-3);
} */

/* Quiz: Now that we can easily have different colors for quotes using pseudo elements, 
how would you approach different colors without using pseudo elements and only using regular selectors?
Explain the limitation of having extra HTML in terms of maintainence */

/* RRC - Explain the special case for ::marker - certain CSS limitations?? */
::marker {
  color: var(--color-6);
}

/* * As of 8 Mar 2025, -webkit-* is not supported in Firefox */
/* -webkit-, -moz- -> vendor prefixes (allow browsers to support experimental or 
non-standard CSS before they become official.) */
/* Natives take precedence over vendor prefix transform over -webkit-transform */
/* Supports width (vertical scroll), height (horizontal scroll), background */
*::-webkit-scrollbar {
  width: var(--space-1);
  background: var(--color-3);
}

/* Supports background, border radius, border, box-shadow */
*::-webkit-scrollbar-thumb {
  border-radius: var(--border-radius-1);
  background-color: var(--color-1);
}

/* Supports background, border radius, border, box-shadow */
*::-webkit-scrollbar-track {
  background-color: var(--color-2);
  border-radius: var(--border-radius-2);
}

/* As of 8 Mar 2025, Safari does not support these, -webkit version will work */
* {
  scrollbar-width: thin;
  scrollbar-color: var(--color-5) var(--color-6);
}

/*-------------------------------------------------------------------------------*/

/*
RRC qs:
  1. No, we don't because cant i just target .first-letter?

2. How much performance is affected if we use a lot of HTML elements for styling purposes instead of pseudo elements in a large application?

3. Why ::marker does not support certain CSS? 

4. It also seems that you can use ::marker as standalone like ::marker {...} in your previous response you said that pseudo elements must be attached with an element but that's not the case for ::marker
  
  */
