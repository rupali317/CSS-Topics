:root {
  /* Colors */
  --color-1: blue;
  --color-2: yellow;
  --color-3: red;
  --color-4: green;
  --color-5: purple;
  --color-6: orange;
  --color-7: gray;
  --color-8: black;
  --color-9: white;
  --color-10: antiquewhite;
  --color-11: hsla(123, 23%, 23%, 0.6);

  /* Font family */
  --font-family-group-1: Cambria, Cochin, Georgia, Times, "Times New Roman",
    serif;

  /* Font size */
  --font-size-1: 2em;
  --font-size-2: 3em;
  --font-size-4: 4em;

  /* Font weight */
  --font-weight-bold: bold;

  /* Border width */
  --border-width-1: 0.125rem;

  /* Border radius */
  --border-radius-1: 1rem;
  --border-radius-2: 1.5rem;

  /* Spacing */
  --space-1: 1rem;

  /* Blur */
  --blur-1: blur(10px);
}

/* https://developer.mozilla.org/en-US/docs/Web/CSS/Pseudo-elements 
   ::before
   ::after 
   ::marker
   ::placeholder, ::-webkit-input-placeholder
   ::-webkit-scrollbar, ::-webkit-scrollbar-track, ::-webkit-scrollbar-thumb

   ::first-letter
   ::first-line
*/
/*------------------------------- Pseudo-Elements -------------------------------*/
.first-letter::first-letter,
.without-first-letter > span {
  /* Pseudo elements have the same specificty of an element = 1 point */
  /* Pseudo elements are not standalone elements. */
  font-size: var(--font-size-1);
  color: var(--color-3);
}

.without-first-line > span,
.first-line::first-line {
  color: var(--color-7);
}

.intro::first-line {
  color: var(--color-5);
}

.without-after-before > span {
  color: var(--color-1);
}

.after-before::before {
  content: "“"; /* content works with pseudo elements and not on real selectors */
  color: var(--color-1);
}

.after-before::after {
  content: "”";
  color: var(--color-1);
}

/* Quiz: and what do you think will happen? */
/* .after-before::before {
  content: "“";
  color: var(--color-3);
} */

/* Quiz: Now that we can easily have different colors for quotes using pseudo elements, 
how would you approach different colors without using pseudo elements and only using regular selectors?
Explain the limitation of having extra HTML in terms of maintainence AND performance */

/* ::marker supports - color, content, font css properties */
/* ::marker (inline) does not support - background, margin, width, padding, margin */
::marker {
  color: var(--color-6);
}

/* * As of 8 Mar 2025, -webkit-* is not supported in Firefox */
/* -webkit-, -moz- -> vendor prefixes (allow browsers to support experimental or 
non-standard CSS before they become official.) */
/* Natives take precedence over vendor prefix transform over -webkit-transform */
::-webkit-input-placeholder,
::placeholder {
  color: var(--color-6);
}
/* Quiz: What do you think will happen if we do [placeholder]? */

/* Supports width (vertical scroll), height (horizontal scroll), background */
*::-webkit-scrollbar {
  width: var(--space-1);
  background: var(--color-3);
}

/* Supports background, border radius, border, box-shadow */
*::-webkit-scrollbar-thumb {
  border-radius: var(--border-radius-1);
  background-color: var(--color-1);
}

/* Supports background, border radius, border, box-shadow */
*::-webkit-scrollbar-track {
  background-color: var(--color-2);
  border-radius: var(--border-radius-2);
}

/* As of 8 Mar 2025, Safari does not support these, -webkit version will work */
* {
  scrollbar-width: thin;
  scrollbar-color: var(--color-5) var(--color-6);
}

/* Quiz: pseudo elements like ::marker, ::placeholder can be used independently. why? 
Why can't ::after, ::before be used independently? */

/*-------------------------------------------------------------------------------*/
